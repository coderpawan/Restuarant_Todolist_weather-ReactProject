{"version":3,"sources":["Todolist/Todo.js","App.js","index.js"],"names":["Todo","useState","inputData","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","edit","setEdit","toggleButton","setToggleButton","addItem","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","class","index","editTodo","find","editItem","updatedItems","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAmHeA,EArGF,WACT,MAAgCC,mBAAS,IAAzC,mBAAMC,EAAN,KAAgBC,EAAhB,KACA,EAAwBF,mBAXT,WACf,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAGF,EACQG,KAAKC,MAAMJ,GAEZ,GAKuBK,IAAjC,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAuBV,mBAAS,IAAhC,mBAAMW,EAAN,KAAYC,EAAZ,KACA,EAAuCZ,oBAAS,GAAhD,mBAAMa,EAAN,KAAoBC,EAApB,KACMC,EAAU,WACd,GAAId,EAEG,GAAIA,GAAaY,EACrBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAIA,EAAQC,KAAOP,EACf,2BAAUM,GAAV,IAAmBE,KAAMlB,IAGlBgB,MAInBf,EAAa,IACbU,EAAQ,MACRE,GAAgB,OAEf,CACA,IAAMM,EAAgB,CAClBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEVS,EAAS,GAAD,mBAAKD,GAAL,CAAWW,KACnBlB,EAAa,SAtBbsB,MAAM,yBAmDZ,OAHAC,qBAAU,WACNrB,aAAasB,QAAQ,aAAapB,KAAKqB,UAAUlB,MACnD,CAACA,IAEC,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKC,IAAI,sBAAsBC,IAAI,cACnC,+EAEJ,sBAAKF,UAAU,QAAf,UACI,uBAAOG,KAAK,OAAOC,YAAY,wBAAcJ,UAAU,YAAYK,MAAOhC,EAAWiC,SAAU,SAACC,GAAD,OAAUjC,EAAaiC,EAAMC,OAAOH,UAClIpB,EACA,mBAAGe,UAAU,8BAA8BS,QAAStB,IACpD,mBAAGa,UAAU,qBAAqBS,QAAStB,OAKhD,qBAAKa,UAAU,YAAf,SACKnB,EAAMO,KAAI,SAACC,GACR,OAEJ,sBAAKW,UAAU,WAAf,UACI,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACI,mBAAGU,MAAM,iBAAiBD,QAAS,kBAhD/C,SAACE,GACb,IAAMC,EAAW/B,EAAMgC,MAAK,SAACxB,GACzB,OAAOA,EAAQC,KAAOqB,KAE1BrC,EAAasC,EAASrB,MACtBP,EAAQ2B,GACRzB,GAAgB,GA0CgD4B,CAASzB,EAAQC,OACzD,mBAAGoB,MAAM,kBAAkBD,QAAS,kBAtC7C,SAACE,GACjB,IAAMI,EAAelC,EAAMmC,QAAO,SAAC3B,GAC/B,OAAOA,EAAQC,KAAOqB,KAE1B7B,EAASiC,GAkCyDE,CAAW5B,EAAQC,YAJrCD,EAAQC,SAa3C,qBAAKU,UAAU,OAAf,SACI,wBAAQA,UAAU,MAAMS,QA1C3B,WACb3B,EAAS,KAyCO,oCCxFToC,EAZH,WAEV,OAAM,cAAC,EAAD,KCLRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3058fdbc.chunk.js","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport \"./style.css\"\r\nimport \"./responsive.css\"\r\n\r\n\r\nconst getLocalData=() =>{\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n\r\n    if(lists){\r\n        return JSON.parse(lists);\r\n    } else {\r\n        return[];\r\n    }\r\n}\r\nconst Todo = () => {\r\n    const[inputData,setInputData] = useState(\"\")\r\n    const[items,setItems] = useState(getLocalData());\r\n    const[edit, setEdit] = useState(\"\")\r\n    const[toggleButton, setToggleButton] = useState(false);\r\n    const addItem = ()=>{\r\n      if(!inputData){\r\n          alert(\"Please fill the Data\");\r\n      } else if (inputData && toggleButton){\r\n         setItems(\r\n             items.map((curElem)=>{\r\n                 if (curElem.id === edit){\r\n                     return{...curElem, name: inputData}\r\n                 }\r\n                 else{\r\n                     return curElem;\r\n                 }\r\n             })\r\n         )\r\n         setInputData([]);\r\n         setEdit(null);\r\n         setToggleButton(false); \r\n      }\r\n      else{\r\n          const myNewInputData ={\r\n              id: new Date().getTime().toString(),\r\n              name: inputData\r\n          }\r\n          setItems([...items,myNewInputData])\r\n          setInputData(\"\");\r\n      }\r\n      \r\n    };\r\n\r\n    const editItem =(index)=>{\r\n        const editTodo = items.find((curElem)=>{\r\n            return curElem.id === index;\r\n        })\r\n        setInputData(editTodo.name);\r\n        setEdit(index);\r\n        setToggleButton(true);\r\n\r\n    }\r\n\r\n\r\n    const deleteItem = (index)=>{\r\n       const updatedItems = items.filter((curElem)=>{\r\n           return curElem.id !== index;\r\n       })\r\n       setItems(updatedItems)\r\n    }\r\n    const removeAll =()=>{\r\n        setItems([]);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(\"mytodolist\",JSON.stringify(items));\r\n    },[items])\r\n    return (\r\n        <>\r\n            <div className=\"Todolist\">\r\n                <div className=\"childTodo\">\r\n                    <div className=\"todoHeading\">\r\n                        <img src=\"images/note pad.png\" alt=\"todo logo\" />\r\n                        <p>Add your List Here 😀😋</p>\r\n                    </div>\r\n                    <div className=\"Input\">\r\n                        <input type=\"text\" placeholder=\"✍️ Add Item\" className=\"writeItem\" value={inputData} onChange={(event)=> setInputData(event.target.value)} ></input>\r\n                        {toggleButton?\r\n                        (<i className=\"fa fa-user-pen add-btn edit\" onClick={addItem}></i>):\r\n                        (<i className=\"fa fa-plus add-btn\" onClick={addItem}></i>)\r\n                        \r\n                    }\r\n                        \r\n                    </div>\r\n                    <div className=\"showItems\">\r\n                        {items.map((curElem)=>{\r\n                            return(\r\n\r\n                        <div className=\"eachItem\" key={curElem.id}>\r\n                            <h3>{curElem.name}</h3>\r\n                            <div className=\"todo-btn\">\r\n                                <i class=\"fa fa-user-pen\" onClick={()=> editItem(curElem.id)}></i>\r\n                                <i class=\"fa fa-trash-can\" onClick={()=> deleteItem(curElem.id)}></i>\r\n                            </div>\r\n                        </div>\r\n                            );\r\n                        })}\r\n\r\n                           \r\n                        \r\n                    </div>\r\n                    <div className=\"item\">\r\n                        <button className=\"btn\" onClick={removeAll}> CLEAR LIST </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","\nimport React from 'react';\n// import Restuarant from \"./Restuarant/Restuarant\";\nimport Todo from \"./Todolist/Todo\";\n// import Temp from \"./Weather/Temp\";\n\n\nconst App = () => {\n  // return <Restuarant/>;\n  return<Todo/>;\n  // return <Temp/>;\n}\n\n\n\n\n\n\n\nexport default App\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}